{"version":3,"sources":["Li.js","Button.js","components/TodoItem.jsx","components/TodoList.jsx","Input.js","Div.js","Title.js","App.jsx","index.js"],"names":["Li","styled","li","ButtonAdd","button","ButtonEdit","ButtonDelete","TodoItem","todo","toggleTodo","deleteTodo","editTodo","id","task","completed","type","checked","onChange","onClick","TodoList","todos","map","Input","input","Div","div","H1","h1","App","useState","setTodos","positionOfTodoToRemoveTemporarily","useRef","todoTaskRef","buttonText","setButtonText","changeText","text","newTodos","find","positionOfTodoToDelete","indexOf","slice","concat","current","positionOfEdit","value","ref","placeholder","prevTodos","newArr","splice","uuidv4","undefined","filter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d447aca.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Li = styled.li`\n    color: black;\n    font-size: 1.5em;\n    width: 25em;\n    display: grid;\n    align-items: center;\n    grid-template-columns: 1fr 50fr 1fr 1fr;\n    margin: .5em;\n`;","import styled from 'styled-components'\n\nexport const ButtonAdd = styled.button`\n    background-color: #E6B009;\n    color: black;\n    font-size: 1.6em;\n    font-weight: bold;\n    border: 4px solid #fff;\n    margin: 1em;\n    width: 25.5vw;\n    cursor: pointer;\n\n    &: hover {\n        border-color: black;\n    }\n`;\n\nexport const ButtonEdit = styled.button`\n    background-color: blue;\n    color: white;\n    font-size: .6em;\n    font-weight: 600;\n    border: 3px solid #fff;\n    margin: .5em;\n    width: 5em;\n    cursor: pointer;    \n\n    &: hover {\n        border-color: black;\n    }\n`;\n\nexport const ButtonDelete = styled.button`\n    background-color: red;\n    color: white;\n    font-size: .6em;\n    font-weight: 600;\n    border: 3px solid #fff;\n    margin: .5em;\n    width: 5em;\n    cursor: pointer;\n\n    &: hover {\n        border-color: black;\n    }\n`;","import React from 'react' \nimport { Li } from '../Li';\nimport { ButtonDelete } from '../Button';\nimport { ButtonEdit } from '../Button';\n\n\nexport function TodoItem({ todo, toggleTodo, deleteTodo, editTodo }) {\n    const { id, task, completed } = todo;\n\n    const handleTodoClick = () => {\n        toggleTodo(id);\n    }\n\n    const handleDeleteButton = () => {\n        deleteTodo(id);\n    }\n\n    const handleEditButton = () => {\n        editTodo(id);\n    }\n\n    return (\n        <Li>\n            <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} />\n            {task}\n            <ButtonEdit onClick={handleEditButton}>Edit</ButtonEdit>\n            <ButtonDelete onClick={handleDeleteButton}>Delete</ButtonDelete>\n        </Li>\n    )\n}\n","import React from 'react'\nimport { TodoItem } from './TodoItem'\n\nexport function TodoList( { todos, toggleTodo, deleteTodo, editTodo } ) {\n    return (<ul>\n\n        {todos.map( (todo) => (\n            <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} deleteTodo={deleteTodo} editTodo={editTodo}/>\n        ))}\n\n    </ul>)\n}\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n    font-size: 1em;\n    width: 25vw;\n    border: 3px solid black;\n`","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    width: 100%;\n    min-height: 100vh;\n    max-height: fit-content;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    background-color: #09C6E3;\n\n`","import styled from 'styled-components';\n\nexport const H1 = styled.h1`\n    font-size: 3em;\n    text-decoration: underline;\n    color: #fff;\n`;","import React, { Fragment, useState, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList  } from './components/TodoList';\nimport { ButtonAdd } from './Button';\nimport { Input } from './Input';\nimport { Div } from './Div';\nimport { H1 } from './Title';\n\nexport function App() {\n    const [todos, setTodos] = useState([\n        { id: 1, task: 'Task 1', completed: false },\n    ]);\n\n    let positionOfTodoToRemoveTemporarily = useRef();\n\n    const todoTaskRef = useRef();\n\n    const toggleTodo = (id) => {\n        const newTodos = [...todos];\n        const todo = newTodos.find((todo) => todo.id === id);\n        todo.completed = !todo.completed;\n        setTodos(newTodos);\n    }\n\n    const [buttonText, setButtonText] = useState(\"ADD ITEM\");\n    const changeText = (text) => setButtonText(text);\n\n    const handleTodoAdd = () => {\n        const task = todoTaskRef.current.value;\n        if (task === '') return;\n        if (buttonText === 'EDIT ITEM') {\n            setTodos((prevTodos) => {\n                const newArr = prevTodos;\n                newArr.splice(positionOfTodoToRemoveTemporarily.current, 0, {id: uuidv4(), task, completed: false});\n                return [...newArr];\n            });\n            changeText(\"ADD ITEM\");\n        } else {\n            setTodos((prevTodos) => {\n                return [...prevTodos, {id: uuidv4(), task, completed: false, positionOfEdit: undefined }]\n            });\n        }\n\n       todoTaskRef.current.value = null;\n    }\n\n    const deleteTodo = (id) => {\n        const newTodos = [...todos];\n        const todo = newTodos.find((todo) => todo.id === id);\n        const positionOfTodoToDelete = newTodos.indexOf(todo);\n        setTodos(newTodos.slice(0, positionOfTodoToDelete).concat(newTodos.slice(positionOfTodoToDelete + 1)));\n    }\n\n       \n\n    const editTodo = (id) => {\n        const newTodos = [...todos];\n        const todo = newTodos.find((todo) => todo.id === id);\n        positionOfTodoToRemoveTemporarily.current = newTodos.indexOf(todo);\n        todo.positionOfEdit = positionOfTodoToRemoveTemporarily;\n        setTodos(newTodos.slice(0, positionOfTodoToRemoveTemporarily.current).concat(newTodos.slice(positionOfTodoToRemoveTemporarily.current + 1)));\n        todoTaskRef.current.value = todo.task;\n        changeText(\"EDIT ITEM\");\n    } \n\n\n\n    return(\n        <Fragment>\n            <Div>\n                <H1>TO DO LIST</H1>\n                <TodoList todos={todos} toggleTodo={toggleTodo} deleteTodo={deleteTodo} editTodo={editTodo} />\n                <Input ref={todoTaskRef} type=\"text\" placeholder=\"New Task\"/>\n                <ButtonAdd onClick={handleTodoAdd}>{buttonText}</ButtonAdd>\n                <div>You have {todos.filter((todo) => !todo.completed).length} tasks remaining</div>\n            </Div>\n            \n        </Fragment>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}